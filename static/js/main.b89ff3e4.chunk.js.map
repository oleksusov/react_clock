{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","oldName","name","newName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","renamedId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAXP,gCAcE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUX,KAAKY,MAAMF,KAEvBD,IAAYE,GACdP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA4CE,MAnBlD,kCAuBE,WACEV,OAAOa,cAAcd,KAAKD,WAxB9B,oBA2BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAa,EAASV,KAAKY,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGlB,EAAKS,cAAcC,OAAO,IAAK,YAxC1C,GAA2BS,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACE1B,MAAyB,CACvB2B,UAAU,EACVC,UAAW,WAHf,EAMEC,UAAY,EANd,uDAQE,WAAqB,IAAD,OAClBzB,KAAKyB,UAAYxB,OAAOC,aAAY,WAClC,EAAKC,SAAS,CAAEqB,UAAWN,QAC1B,MAEHQ,SAASC,iBAAiB,SAAS,WACjC,EAAKxB,SAAS,CAAEoB,UAAU,OAG5BG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAK1B,SAAS,CAAEoB,UAAU,SAnBhC,kCAuBE,WACEtB,OAAOa,cAAcd,KAAKyB,aAxB9B,oBA2BE,WACE,MAGIzB,KAAKJ,MAFP2B,EADF,EACEA,SACAC,EAFF,EAEEA,UAGF,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOb,KAAMc,WArClC,GAAyBR,IAAMC,WCb/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.b89ff3e4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  renamedId = 0;\n\n  componentDidMount() {\n    this.renamedId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.renamedId);\n  }\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}